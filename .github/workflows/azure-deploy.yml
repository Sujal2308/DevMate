name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Prevent multiple deployments from running simultaneously
concurrency:
  group: azure-deployment-devmate
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: npm install, build, and test
        run: |
          cd server
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: |
          cd server
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B6847C4617B24D0284FC31534298F99E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FD5E1EC266664C47AEE0DD8C8053B1C2 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_099769EC57394056B8CC650851795B70 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "DevMate"
          slot-name: "Production"
          package: .
        continue-on-error: true

      - name: 'Retry deployment if failed'
        if: steps.deploy-to-webapp.outcome == 'failure'
        id: retry-deploy
        run: |
          echo "First deployment attempt failed, waiting 30 seconds before retry..."
          sleep 30
          echo "Retrying deployment..."
        
      - name: 'Deploy to Azure Web App - Retry 1'
        if: steps.deploy-to-webapp.outcome == 'failure'
        id: deploy-retry-1
        uses: azure/webapps-deploy@v3
        with:
          app-name: "DevMate"
          slot-name: "Production"
          package: .
        continue-on-error: true

      - name: 'Final retry after longer wait'
        if: steps.deploy-retry-1.outcome == 'failure'
        id: final-retry-wait
        run: |
          echo "Second deployment attempt failed, waiting 60 seconds for final retry..."
          sleep 60
          echo "Attempting final deployment..."

      - name: 'Deploy to Azure Web App - Final Retry'
        if: steps.deploy-retry-1.outcome == 'failure'
        id: deploy-final-retry
        uses: azure/webapps-deploy@v3
        with:
          app-name: "DevMate"
          slot-name: "Production"
          package: .

      - name: 'Check deployment status'
        run: |
          if [[ "${{ steps.deploy-to-webapp.outcome }}" == "success" ]]; then
            echo "✅ Deployment succeeded on first attempt"
          elif [[ "${{ steps.deploy-retry-1.outcome }}" == "success" ]]; then
            echo "✅ Deployment succeeded on retry attempt"
          elif [[ "${{ steps.deploy-final-retry.outcome }}" == "success" ]]; then
            echo "✅ Deployment succeeded on final retry attempt"
          else
            echo "❌ All deployment attempts failed"
            exit 1
          fi

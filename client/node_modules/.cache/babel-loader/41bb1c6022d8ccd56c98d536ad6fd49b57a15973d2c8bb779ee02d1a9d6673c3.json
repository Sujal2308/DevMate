{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem(\"token\"));// Set axios default auth header\nuseEffect(()=>{if(token){axios.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);}else{delete axios.defaults.headers.common[\"Authorization\"];}},[token]);// Check for existing user on mount\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{const response=await axios.get(\"/api/auth/me\");setUser(response.data);}catch(error){console.error(\"Auth check failed:\",error);logout();}}setLoading(false);};checkAuth();},[token]);const login=async(email,password)=>{try{const response=await axios.post(\"/api/auth/login\",{email,password});const{token:newToken,user:userData}=response.data;localStorage.setItem(\"token\",newToken);setToken(newToken);setUser(userData);return{success:true};}catch(error){var _error$response,_error$response2,_error$response2$data,_error$response3,_error$response3$data,_error$response4,_error$response5,_error$response5$data;let errorMessage=\"Login failed\";if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===503){errorMessage=\"Database not connected. Please ensure MongoDB is running and try again.\";}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)===\"DATABASE_NOT_CONNECTED\"){errorMessage=\"Database connection required. Please start MongoDB service.\";}else if((_error$response3=error.response)!==null&&_error$response3!==void 0&&(_error$response3$data=_error$response3.data)!==null&&_error$response3$data!==void 0&&_error$response3$data.message){errorMessage=error.response.data.message;}return{success:false,error:errorMessage,isDBError:((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===503||((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)===\"DATABASE_NOT_CONNECTED\"};}};const register=async(username,email,password)=>{try{const response=await axios.post(\"/api/auth/register\",{username,email,password});const{token:newToken,user:userData}=response.data;localStorage.setItem(\"token\",newToken);setToken(newToken);setUser(userData);return{success:true};}catch(error){var _error$response6,_error$response7,_error$response7$data,_error$response8,_error$response8$data,_error$response9,_error$response0,_error$response0$data;let errorMessage=\"Registration failed\";if(((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)===503){errorMessage=\"Database not connected. Please ensure MongoDB is running and try again.\";}else if(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)===\"DATABASE_NOT_CONNECTED\"){errorMessage=\"Database connection required. Please start MongoDB service.\";}else if((_error$response8=error.response)!==null&&_error$response8!==void 0&&(_error$response8$data=_error$response8.data)!==null&&_error$response8$data!==void 0&&_error$response8$data.message){errorMessage=error.response.data.message;}return{success:false,error:errorMessage,isDBError:((_error$response9=error.response)===null||_error$response9===void 0?void 0:_error$response9.status)===503||((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.error)===\"DATABASE_NOT_CONNECTED\"};}};const logout=()=>{localStorage.removeItem(\"token\");setToken(null);setUser(null);delete axios.defaults.headers.common[\"Authorization\"];};const updateUser=userData=>{setUser(userData);};const value={user,login,register,logout,updateUser,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","concat","checkAuth","response","get","data","error","console","logout","login","email","password","post","newToken","userData","setItem","success","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response4","_error$response5","_error$response5$data","errorMessage","status","message","isDBError","register","username","_error$response6","_error$response7","_error$response7$data","_error$response8","_error$response8$data","_error$response9","_error$response0","_error$response0$data","removeItem","updateUser","value","isAuthenticated","Provider"],"sources":["D:/DevMate/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n\r\n  // Set axios default auth header\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check for existing user on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(\"/api/auth/me\");\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Auth check failed:\", error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\"/api/auth/login\", { email, password });\r\n      const { token: newToken, user: userData } = response.data;\r\n\r\n      localStorage.setItem(\"token\", newToken);\r\n      setToken(newToken);\r\n      setUser(userData);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      let errorMessage = \"Login failed\";\r\n\r\n      if (error.response?.status === 503) {\r\n        errorMessage =\r\n          \"Database not connected. Please ensure MongoDB is running and try again.\";\r\n      } else if (error.response?.data?.error === \"DATABASE_NOT_CONNECTED\") {\r\n        errorMessage =\r\n          \"Database connection required. Please start MongoDB service.\";\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        error: errorMessage,\r\n        isDBError:\r\n          error.response?.status === 503 ||\r\n          error.response?.data?.error === \"DATABASE_NOT_CONNECTED\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await axios.post(\"/api/auth/register\", {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      const { token: newToken, user: userData } = response.data;\r\n\r\n      localStorage.setItem(\"token\", newToken);\r\n      setToken(newToken);\r\n      setUser(userData);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      let errorMessage = \"Registration failed\";\r\n\r\n      if (error.response?.status === 503) {\r\n        errorMessage =\r\n          \"Database not connected. Please ensure MongoDB is running and try again.\";\r\n      } else if (error.response?.data?.error === \"DATABASE_NOT_CONNECTED\") {\r\n        errorMessage =\r\n          \"Database connection required. Please start MongoDB service.\";\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        error: errorMessage,\r\n        isDBError:\r\n          error.response?.status === 503 ||\r\n          error.response?.data?.error === \"DATABASE_NOT_CONNECTED\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken(null);\r\n    setUser(null);\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    setUser(userData);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    loading,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
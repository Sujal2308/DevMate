{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevMate\\\\client\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const token = searchParams.get(\"token\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (!password || password.length < 6) {\n      setError(\"Password must be at least 6 characters.\");\n      return;\n    }\n    if (password !== confirm) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\"/api/auth/reset-password\", {\n        token,\n        password\n      });\n      setMessage(\"Password reset successful! You can now sign in.\");\n      setTimeout(() => navigate(\"/login\"), 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Reset failed. Try again or request a new link.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-20 p-6 bg-x-dark rounded-xl shadow-lg text-x-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Invalid Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Reset token is missing or invalid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-20 p-6 bg-x-dark rounded-xl shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-x-white\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"block text-x-gray mb-1\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"w-full px-4 py-2 rounded-lg border border-x-border bg-x-black text-x-white focus:outline-none\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          minLength: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm\",\n          className: \"block text-x-gray mb-1\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm\",\n          className: \"w-full px-4 py-2 rounded-lg border border-x-border bg-x-black text-x-white focus:outline-none\",\n          value: confirm,\n          onChange: e => setConfirm(e.target.value),\n          required: true,\n          minLength: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary w-full py-2 font-semibold\",\n        disabled: loading,\n        children: loading ? \"Resetting...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-400 mt-4\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400 mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"uvZhQCoE3bxaDw1vTKx6gTPsZNI=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useSearchParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","navigate","password","setPassword","confirm","setConfirm","message","setMessage","error","setError","loading","setLoading","token","get","handleSubmit","e","preventDefault","length","post","setTimeout","err","_err$response","_err$response$data","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","minLength","disabled","_c","$RefreshReg$"],"sources":["D:/DevMate/client/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const token = searchParams.get(\"token\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n    if (!password || password.length < 6) {\r\n      setError(\"Password must be at least 6 characters.\");\r\n      return;\r\n    }\r\n    if (password !== confirm) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(\"/api/auth/reset-password\", { token, password });\r\n      setMessage(\"Password reset successful! You can now sign in.\");\r\n      setTimeout(() => navigate(\"/login\"), 2000);\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.message ||\r\n          \"Reset failed. Try again or request a new link.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-20 p-6 bg-x-dark rounded-xl shadow-lg text-x-white\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Invalid Link</h2>\r\n        <p>Reset token is missing or invalid.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-20 p-6 bg-x-dark rounded-xl shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-x-white\">Reset Password</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"block text-x-gray mb-1\">\r\n            New Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"w-full px-4 py-2 rounded-lg border border-x-border bg-x-black text-x-white focus:outline-none\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            minLength={6}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirm\" className=\"block text-x-gray mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirm\"\r\n            className=\"w-full px-4 py-2 rounded-lg border border-x-border bg-x-black text-x-white focus:outline-none\"\r\n            value={confirm}\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            required\r\n            minLength={6}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn-primary w-full py-2 font-semibold\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Resetting...\" : \"Reset Password\"}\r\n        </button>\r\n      </form>\r\n      {message && <p className=\"text-green-400 mt-4\">{message}</p>}\r\n      {error && <p className=\"text-red-400 mt-4\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}